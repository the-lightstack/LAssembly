OP        CODE      NOTE                                LEN (oc+params)
–––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
push    -> 0x10     push reg                             2 bytes
pop     -> 0x11     OC +reg-byte                         2 bytes

add     -> 0x12     add reg,reg                          3 bytes
sub     -> 0x13     sub reg,reg                          3 bytes
and     -> 0x14     and reg,reg                          3 bytes
mul     -> 0x15     mul reg,reg                          3 bytes
div     -> 0x16     div reg,reg                          3 bytes
xor     -> 0x17     xor reg,reg                          3 bytes

mov     -> 0x18     mov [reg/reg-loc] + 1byte, [val/reg-loc/reg] 8bytes>12 Bytes
cmp     -> 0x19     cmp reg,reg                          3 bytes
je      -> 0x20     je <4byte addr>                      5 bytes
jne     -> 0x21     jne <4byte addr>                     5 bytes
jmp     -> 0x22     jmp <4byte addr>                     5 bytes
jg      -> 0x23     jg <4byte addr>                      5 bytes
jl      -> 0x24     jl <4byte addr>                      5 bytes
syscall -> 0x25     syscall                              1 byte

–––––––––––– Pre arg definition ––––––––––––––––

[reg]     = 0x1
[val]     = 0x2 // padded to 8 bytes
[reg-loc] = 0x3 // so it is a pointer


–––––––––––– Reg byte mapping  ––––––––––––––––

rax -> 0x50
rbx -> 0x51
rcx -> 0x52

rdi -> 0x53
rsi -> 0x54
rdx -> 0x55

rsp -> 0x56
rbp -> 0x57

rip -> 0x58  # Won't be used too much
rbf  -> 0x59 # Only used by pre-compiler to beaufiy stuff [1] 

flags -> 0x60

––––––––– Syscalls –––––––––––––––––––––––––

( Not a part of compilation )
write       -> 0x80
open        -> 0x81 
read        -> 0x82
exec?       -> 0x83
exit        -> 0x84

printNum    -> 0x85


–––––––––– Precompiler instructions ––––––––

return 
call
(also push and pop?)

–––––––––––– Internal Label Structure ––
Labels are stored in a char* with the format:
<label-name>\x00<4byte address> 
    ^               ^
Max 32 byte    


–––––––––––– Other Syntax –––––––––––––––
Labels are decleared like `!main` and may not contain a space, max of 32 chars.
You can later reference this label in the jump instructions like `jne main`


–––––––– Appendix –––––––––––––––––
[1] rbf will be used to change `cmp rax,0x1` (which is illegal) to a legal 
    instruction like `mov rbf,0x1; cmp rax,rbf`. Leaving out the direct 
    possibility to do this makes the opcodes MUCH cleaner and shorter

